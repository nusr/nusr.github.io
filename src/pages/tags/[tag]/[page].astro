---
import { type CollectionEntry, getCollection } from "astro:content";
import TagPostList from "@layouts/TagPostList.astro";
import getUniqueTags from "@utils/getUniqueTags";
import getPostsByTag from "@utils/getPostsByTag";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";

export interface Props {
  post: CollectionEntry<"blog">;
  tag: string;
  tagName: string;
}

export async function getStaticPaths() {
  const blog = await getCollection("blog");

  const tags = getUniqueTags(blog);

  return tags.flatMap(({ tag, tagName }) => {
    const tagPosts = getPostsByTag(blog, tag);
    const totalPages = getPageNumbers(tagPosts.length);

    return totalPages.map(page => ({
      params: { tag, page },
      props: { tag, tagName },
    }));
  });
}

const { page } = Astro.params;
const { tag, tagName } = Astro.props;

const blog = await getCollection("blog", ({ data }) => !data.draft);

const postsByTag = getPostsByTag(blog, tag);

const pagination = getPagination({
  blog: postsByTag,
  page,
});
---

<TagPostList {...pagination} {tag} {tagName} />
