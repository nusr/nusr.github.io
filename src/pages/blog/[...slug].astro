---
import { type CollectionEntry, getCollection } from "astro:content";
import Posts from "@layouts/Posts.astro";
import PostDetails from "@layouts/PostDetails.astro";
import getSortedPosts from "@utils/getSortedPosts";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";

export interface Props {
  post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const blog = await getCollection("blog", ({ data }) => !data.draft);

  const postResult = blog.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));

  const pagePaths = getPageNumbers(blog.length).map(pageNum => ({
    params: { slug: String(pageNum) },
  }));

  return [...postResult, ...pagePaths];
}

const { slug } = Astro.params;
const { post } = Astro.props;

const blog = await getCollection("blog");

const sortedPosts = getSortedPosts(blog);

const pagination = getPagination({
  blog: sortedPosts,
  page: slug,
});
---

{post ? <PostDetails post={post} /> : <Posts {...pagination} />}
